///@mainpage    스택의 재귀 특성을 이용한 페인트 맵의 특정 색상의 범위를 다른 선택 색상으로 변경한다
///@section intro 소개
///- 부분1 : 선택한 특정 색상 범위를 선택 색상 범위로 변경 알고리즘
///- 부분2 : 페인팅 맵의 변경 과정, 통계정보를 출력한다.
///@section Program 프로그램명
///- 프로그램명  :   PaintingMap
///- 프로그램내용    :  사용자가 원하는 좌표의 색상과 같은 색상으로 이어지는 색상 범위를 사용자가 선택한 색상으로 변경한다.
///@section CREATEINFO 작성정보
///- 작성자      :   김규태(gyutae100@gmail.com)
///- 작성일      :   2018/04/24
///@section MODIFYINFO 수정정보
///- 수정자/수정일   : 작성자와 동일
///- 2014.04.24    : Doxygen 주석화





/*
마인드 스톰 로봇의 미로 찾기 정리
:로봇이 미로를 찾으려면 좌수법, 우수법이 존재한다. (직진 이외에 움직일 경로를 뜻함)
:좌수법, 우수법이 통일된 방법이여야지 제대로 모든 미로를 탐색 가능하다.

도착점까지 최단경로는 어떻게 처리??
:배열을 통해 교차로를 만날 때마다 실제 회전 방향을 기록한다.
:이중 미로 탈출을 위해 주행한 경로 중 최단경로를 찾기 위해 제외되어야 할 경로는 막다른 골목이다.
:막다른 골목으로 가는 경우를 제거하면 된다.

우수법을 통해서는 멀어서 갔는데 좌수법으로 가는 경우는 짧게 가는 경우는 어떻게 처리?
:프로그램이 우수법, 좌수법 다 가능하게 하는 방법밖에 없다.
*/



/*
스텍 미로 찾기 경로 저장 방법 정리
:경로에 대한 배열(크기는 최대 배열 크기)과 배열에 대한 index변수를 생성한다.
:index변수는 -1부터 시작하며, 배열에 요소를 저장 시마다 1씩 증가한다.
:요소에 값을 삽입시 index변수는 1씩 넣고 증가한다.
:index는 배열에 삽입한 요소 중 마지막 요소의 index가 된다.
:즉 배열의 index요소 값은 마지막 이동 좌표의 값이 된다.
:pop의 좌표값의 x, y합 값과 마지막 이동 좌표의 x, y의 합 값의 차이가 1이상 차이나면 이동 시 연결된 이동이 아님으로 간주되므로
차이만큼 index는 감소하고 감소된 index의 배열 요소에 pop한 값을 삽입한다.
*/

/*
index 증가 방식
:삽입 후 index 증가하는 방식 (이 방식은 -1부터 시작한다. 요소가 없을 때는 -1, 1개시 0으로 배열의 삽입된 요소 갯수-1개이다)
:index증가 후 삽입하는 방식 (이 방식은 0부터 시작한다. 요소가 없을 때는 0. 1개시 1로 배열의 삽입된 요소와 갯수가 같다)

두 방식 중 어느 방식이 더 좋은가?
:위 스텍 미로 찾기 방식에서는 index증가 후 삽입하는 방식이 더 좋은 것 같다. 솔찍히 자잘한 연산이므로 고려 할 필요가 없다.
*/
